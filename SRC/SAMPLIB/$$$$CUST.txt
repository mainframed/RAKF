                   RAKF 1.2.0 Customization Instructions
                   =====================================

This document describes the steps to customize and activate RAKF 1.2.0
after the basic SMP4 installation has been completed.

1. a) Allocate a PDS named SYS1.SECURE.CNTL (LRECL=80). This PDS will
      contain 2 members:

      o USERS:    The RAKF users table
      o PROFILES: The RAKF profiles table

      If you've already allocated this library in an earlier version of
      RAKF you can continue to use it. The name of the library has to be
      SYS1.SECURE.CNTL. Although it could be changed this has to be done
      in several locations and will for the sake of simplicity not be outlined
      in these instructions.

   b) Allocate a sequential dataset named SYS1.SECURE.PWUP with
      LRECL=18 and RECFM=F (fixed records of 18 bytes, no blocking).
      This dataset serves as a queue: User initiated password changes
      are saved here until the next run of RAKFUSER integrates them into
      the RAKF users table.

      If you've already allocated this dataset in an earlier version of
      RAKF you can continue to use it. The name of the dataset has to be
      SYS1.SECURE.PWUP. Although it could be changed this has to be done
      in several locations and will for the sake of simplicity not be outlined
      in these instructions.

   Note: During the process of adapting the profiles and users tables
   ====  to meet your security requirements (step 6) special attention
         to the protection of the datasets created in step 1 should be
         payed:

         o SYS1.SECURE.CNTL: started tasks and the user(s) and/or group(s)
                             responsible for RAKF administration need UPDATE
                             access to this dataset.
         o SYS1.SECURE.PWUP: started tasks need UPDATE access to this dataset.

         As both datasets contain clear text passwords normal users shouldn't be
         allowed any access to them. An easy way to protect these datasets is
         to define a dataset profile SYS1.SECURE.* with universal access NONE
         and selectively allow the RAKF administrator user(s)/group(s) UPDATE
         access to this profile. If the standard setup is used started tasks
         have operations authority and thus don't need to be explicitely
         allowed.

2. If you're a first time RAKF user copy the following members from
   HLQ.SAMPLIB to SYS1.SECURE.CNTL:

   o MINUSR using a new name of USERS
   o MINPRF using a new name of PROFILES

   This establishes a minimal configuration equivalent to an unprotected
   system with IBMUSER being defined as the only user. IBMUSER has
   operations priviledge allowing all accesses.

   If you are running Volker's TK3 (Turnkey MVS) system you can use
   TK3USR instead of MINUSR which defines besides IBMUSER also the
   users HERC01, HERC02, HERC03 and HERC04 with equivalent attributes
   as they are defined in UADS. Note, however, that RAKF doesn't allow
   users having no password. For this reason IBMUSER, HERC01 and HERC03
   have a password of NONE defined instead of no password as in TK3.

   Note that each TSO user still needs an UADS entry to define the TSO
   authorizations JCL, MOUNT, OPER and ACCOUNT. These are not covered
   by RAKF's users table.

3. Issue the command

   S RAKF

   at the MVS console and reply YES to message RAKF002A. Verify that
   the profiles and users tables initialize correctly and that you can
   logon using the usernames and passwords from SYS1.SECURE.CNTL(USERS).

   Note Although the RAKF procedure loads the in-core users and profiles tables
   ==== it is not primarily intended to be used for that purpose during normal
        operations. To routinely update the profiles or user table to activate
        changes the procedures RAKFPROF or RAKFUSER should be used as outlined
        in $$$$$DOC (this document is the unmodified "INTRODUCTION TO THE ESC
        SECURITY SYSTEM" dated 1991 where these procedures are called CJYRPROF
        and CJYRUIDS, respectively).

        The main purpose of the RAKF procedure is to provide a means to activate
        RAKF if initialization didn't take place automatically at IPL time, for
        example during installation and customization. If the RAKF procedure is
        run when RAKF had been activated already it will skip the initialization
        and refresh the in-core users and profile table, which is equivalent to
        running RAKFPROF and RAKFUSER.

4. To enable automatic initialization of RAKF at system IPL time
   (highly recommended!) MSTRJCL needs to be modified to contain DD
   statements pointing to the users and profiles tables:

   //RAKFPROF DD DSN=SYS1.SECURE.CNTL(PROFILES),
   //            DISP=SHR
   //RAKFUSER DD DSN=SYS1.SECURE.CNTL(USERS),
   //            DISP=SHR
   //RAKFPWUP DD DSN=SYS1.SECURE.PWUP,
   //            DISP=SHR

   Member ZJW0003 of HLQ.SAMPLIB provides a sample USERMOD accomplishing this.
   If ZJW0003 fits your system just submit it. If not use any other
   method of your choice to add the required DD cards.

5. Edit SYS1.PARMLIB(RAKFINIT) and change the value NO in line 1 to ASK.
   Then reIPL the system. Message RAKF002A will now be issued immediately
   after master scheduler initialization and give you the choice to start
   RAKF or not.

6. Start now modifying your USERS and PROFILES tables until the desired
   level of protection is reached. Please read also member $$$$M38J for
   additional considerations.

7. Once you're satisfied with your configuration change line 1 in
   SYS1.PARMLIB(RAKFINIT) from ASK to YES which will cause RAKF to be
   activated unconditionally during IPL.
